import java.io.*;
import java.util.*;

public class CalculateRelativeFrequency {
    public static void main(String[] args) {
        Map<String, Integer> wordCounts = new HashMap<>();
        try (Scanner top100Scanner = new Scanner(new File("Top100"))) {
            while (top100Scanner.hasNext()) {
                String word = top100Scanner.next();
                int count = top100Scanner.nextInt();
                wordCounts.put(word.toLowerCase(), count);
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        try (Scanner inputScanner = new Scanner(new File("input.txt"))) {
            Map<String, Integer> coOccurrenceCounts = new HashMap<>();
            int totalCount = 0;

            while (inputScanner.hasNextLine()) {
                String line = inputScanner.nextLine();
                String[] words = line.toLowerCase().split("\\s+");

                for (int i = 0; i < words.length - 1; i++) {
                    String wordA = words[i];
                    String wordB = words[i + 1];

                    if (wordCounts.containsKey(wordA) && wordCounts.containsKey(wordB)) {
                        String wordPair = wordA + " " + wordB;
                        coOccurrenceCounts.put(wordPair, coOccurrenceCounts.getOrDefault(wordPair, 0) + 1);
                        totalCount++;
                    }
                }
            }

            List<String> results = new ArrayList<>();
            for (String wordPair : coOccurrenceCounts.keySet()) {
                String[] words = wordPair.split(" ");
                String wordA = words[0];
                String wordB = words[1];
                int countA = wordCounts.get(wordA);
                int countAB = coOccurrenceCounts.get(wordPair);

                double relativeFrequency = (double) countAB / countA;
                results.add(wordA + " " + wordB + " " + relativeFrequency);
            }

            results.sort((a, b) -> {
                double rfA = Double.parseDouble(a.split(" ")[2]);
                double rfB = Double.parseDouble(b.split(" ")[2]);
                return Double.compare(rfB, rfA);
            });

            int topN = 100;
            for (int i = 0; i < Math.min(topN, results.size()); i++) {
                System.out.println(results.get(i));
            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }
}
